// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.1
// source: proto/scheduler.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Worker status enum
type WorkerStatus int32

const (
	WorkerStatus_IDLE    WorkerStatus = 0
	WorkerStatus_BUSY    WorkerStatus = 1
	WorkerStatus_OFFLINE WorkerStatus = 2
	WorkerStatus_ERROR   WorkerStatus = 3
)

// Enum value maps for WorkerStatus.
var (
	WorkerStatus_name = map[int32]string{
		0: "IDLE",
		1: "BUSY",
		2: "OFFLINE",
		3: "ERROR",
	}
	WorkerStatus_value = map[string]int32{
		"IDLE":    0,
		"BUSY":    1,
		"OFFLINE": 2,
		"ERROR":   3,
	}
)

func (x WorkerStatus) Enum() *WorkerStatus {
	p := new(WorkerStatus)
	*p = x
	return p
}

func (x WorkerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scheduler_proto_enumTypes[0].Descriptor()
}

func (WorkerStatus) Type() protoreflect.EnumType {
	return &file_proto_scheduler_proto_enumTypes[0]
}

func (x WorkerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkerStatus.Descriptor instead.
func (WorkerStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{0}
}

// Task status enum
type TaskStatus int32

const (
	TaskStatus_PENDING   TaskStatus = 0
	TaskStatus_RUNNING   TaskStatus = 1
	TaskStatus_COMPLETED TaskStatus = 2
	TaskStatus_FAILED    TaskStatus = 3
	TaskStatus_CANCELED  TaskStatus = 4
)

// Enum value maps for TaskStatus.
var (
	TaskStatus_name = map[int32]string{
		0: "PENDING",
		1: "RUNNING",
		2: "COMPLETED",
		3: "FAILED",
		4: "CANCELED",
	}
	TaskStatus_value = map[string]int32{
		"PENDING":   0,
		"RUNNING":   1,
		"COMPLETED": 2,
		"FAILED":    3,
		"CANCELED":  4,
	}
)

func (x TaskStatus) Enum() *TaskStatus {
	p := new(TaskStatus)
	*p = x
	return p
}

func (x TaskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scheduler_proto_enumTypes[1].Descriptor()
}

func (TaskStatus) Type() protoreflect.EnumType {
	return &file_proto_scheduler_proto_enumTypes[1]
}

func (x TaskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskStatus.Descriptor instead.
func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{1}
}

// Worker information
type Worker struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Gpus          []*GPU                 `protobuf:"bytes,2,rep,name=gpus,proto3" json:"gpus,omitempty"`
	Address       string                 `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Status        WorkerStatus           `protobuf:"varint,4,opt,name=status,proto3,enum=scheduler.WorkerStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Worker) Reset() {
	*x = Worker{}
	mi := &file_proto_scheduler_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Worker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Worker) ProtoMessage() {}

func (x *Worker) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Worker.ProtoReflect.Descriptor instead.
func (*Worker) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{0}
}

func (x *Worker) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Worker) GetGpus() []*GPU {
	if x != nil {
		return x.Gpus
	}
	return nil
}

func (x *Worker) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Worker) GetStatus() WorkerStatus {
	if x != nil {
		return x.Status
	}
	return WorkerStatus_IDLE
}

// GPU resource information
type GPU struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Model         string                 `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	MemoryMb      uint64                 `protobuf:"varint,3,opt,name=memory_mb,json=memoryMb,proto3" json:"memory_mb,omitempty"`
	Available     bool                   `protobuf:"varint,4,opt,name=available,proto3" json:"available,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GPU) Reset() {
	*x = GPU{}
	mi := &file_proto_scheduler_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GPU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPU) ProtoMessage() {}

func (x *GPU) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPU.ProtoReflect.Descriptor instead.
func (*GPU) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{1}
}

func (x *GPU) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GPU) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *GPU) GetMemoryMb() uint64 {
	if x != nil {
		return x.MemoryMb
	}
	return 0
}

func (x *GPU) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

// Task definition
type Task struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	RequiredGpus  uint32                 `protobuf:"varint,3,opt,name=required_gpus,json=requiredGpus,proto3" json:"required_gpus,omitempty"`
	MinGpuMemory  uint64                 `protobuf:"varint,4,opt,name=min_gpu_memory,json=minGpuMemory,proto3" json:"min_gpu_memory,omitempty"`
	Configuration []byte                 `protobuf:"bytes,5,opt,name=configuration,proto3" json:"configuration,omitempty"`
	Status        TaskStatus             `protobuf:"varint,6,opt,name=status,proto3,enum=scheduler.TaskStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_proto_scheduler_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{2}
}

func (x *Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Task) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Task) GetRequiredGpus() uint32 {
	if x != nil {
		return x.RequiredGpus
	}
	return 0
}

func (x *Task) GetMinGpuMemory() uint64 {
	if x != nil {
		return x.MinGpuMemory
	}
	return 0
}

func (x *Task) GetConfiguration() []byte {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *Task) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_PENDING
}

// Request to register a worker
type RegisterWorkerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkerId      string                 `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	Gpus          []*GPU                 `protobuf:"bytes,2,rep,name=gpus,proto3" json:"gpus,omitempty"`
	Address       string                 `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterWorkerRequest) Reset() {
	*x = RegisterWorkerRequest{}
	mi := &file_proto_scheduler_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterWorkerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterWorkerRequest) ProtoMessage() {}

func (x *RegisterWorkerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterWorkerRequest.ProtoReflect.Descriptor instead.
func (*RegisterWorkerRequest) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterWorkerRequest) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *RegisterWorkerRequest) GetGpus() []*GPU {
	if x != nil {
		return x.Gpus
	}
	return nil
}

func (x *RegisterWorkerRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// Response to worker registration
type RegisterWorkerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	AssignedId    string                 `protobuf:"bytes,3,opt,name=assigned_id,json=assignedId,proto3" json:"assigned_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterWorkerResponse) Reset() {
	*x = RegisterWorkerResponse{}
	mi := &file_proto_scheduler_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterWorkerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterWorkerResponse) ProtoMessage() {}

func (x *RegisterWorkerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterWorkerResponse.ProtoReflect.Descriptor instead.
func (*RegisterWorkerResponse) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterWorkerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterWorkerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RegisterWorkerResponse) GetAssignedId() string {
	if x != nil {
		return x.AssignedId
	}
	return ""
}

// Request for a task
type TaskRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	WorkerId        string                 `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	AvailableGpuIds []string               `protobuf:"bytes,2,rep,name=available_gpu_ids,json=availableGpuIds,proto3" json:"available_gpu_ids,omitempty"`
	Task            *Task                  `protobuf:"bytes,3,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TaskRequest) Reset() {
	*x = TaskRequest{}
	mi := &file_proto_scheduler_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskRequest) ProtoMessage() {}

func (x *TaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskRequest.ProtoReflect.Descriptor instead.
func (*TaskRequest) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{5}
}

func (x *TaskRequest) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *TaskRequest) GetAvailableGpuIds() []string {
	if x != nil {
		return x.AvailableGpuIds
	}
	return nil
}

func (x *TaskRequest) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

// Task status update
type TaskStatusUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	WorkerId      string                 `protobuf:"bytes,2,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	Status        TaskStatus             `protobuf:"varint,3,opt,name=status,proto3,enum=scheduler.TaskStatus" json:"status,omitempty"`
	Progress      float32                `protobuf:"fixed32,4,opt,name=progress,proto3" json:"progress,omitempty"`
	Message       string                 `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	Metrics       []*Metric              `protobuf:"bytes,6,rep,name=metrics,proto3" json:"metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskStatusUpdate) Reset() {
	*x = TaskStatusUpdate{}
	mi := &file_proto_scheduler_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskStatusUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskStatusUpdate) ProtoMessage() {}

func (x *TaskStatusUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskStatusUpdate.ProtoReflect.Descriptor instead.
func (*TaskStatusUpdate) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{6}
}

func (x *TaskStatusUpdate) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskStatusUpdate) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *TaskStatusUpdate) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_PENDING
}

func (x *TaskStatusUpdate) GetProgress() float32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *TaskStatusUpdate) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TaskStatusUpdate) GetMetrics() []*Metric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// Training metrics
type Metric struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value         float32                `protobuf:"fixed32,2,opt,name=value,proto3" json:"value,omitempty"`
	Timestamp     uint64                 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Metric) Reset() {
	*x = Metric{}
	mi := &file_proto_scheduler_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metric) ProtoMessage() {}

func (x *Metric) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metric.ProtoReflect.Descriptor instead.
func (*Metric) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{7}
}

func (x *Metric) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Metric) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Metric) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Response to task status update
type TaskStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Acknowledged  bool                   `protobuf:"varint,1,opt,name=acknowledged,proto3" json:"acknowledged,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskStatusResponse) Reset() {
	*x = TaskStatusResponse{}
	mi := &file_proto_scheduler_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskStatusResponse) ProtoMessage() {}

func (x *TaskStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskStatusResponse.ProtoReflect.Descriptor instead.
func (*TaskStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{8}
}

func (x *TaskStatusResponse) GetAcknowledged() bool {
	if x != nil {
		return x.Acknowledged
	}
	return false
}

func (x *TaskStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Request for worker status monitoring
type WorkerStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkerId      string                 `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkerStatusRequest) Reset() {
	*x = WorkerStatusRequest{}
	mi := &file_proto_scheduler_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerStatusRequest) ProtoMessage() {}

func (x *WorkerStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerStatusRequest.ProtoReflect.Descriptor instead.
func (*WorkerStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{9}
}

func (x *WorkerStatusRequest) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

// Response for worker status monitoring
type WorkerStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkerId      string                 `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	Status        WorkerStatus           `protobuf:"varint,2,opt,name=status,proto3,enum=scheduler.WorkerStatus" json:"status,omitempty"`
	Gpus          []*GPU                 `protobuf:"bytes,3,rep,name=gpus,proto3" json:"gpus,omitempty"`
	ActiveTasks   []*TaskSummary         `protobuf:"bytes,4,rep,name=active_tasks,json=activeTasks,proto3" json:"active_tasks,omitempty"`
	Timestamp     uint64                 `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkerStatusResponse) Reset() {
	*x = WorkerStatusResponse{}
	mi := &file_proto_scheduler_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerStatusResponse) ProtoMessage() {}

func (x *WorkerStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerStatusResponse.ProtoReflect.Descriptor instead.
func (*WorkerStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{10}
}

func (x *WorkerStatusResponse) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *WorkerStatusResponse) GetStatus() WorkerStatus {
	if x != nil {
		return x.Status
	}
	return WorkerStatus_IDLE
}

func (x *WorkerStatusResponse) GetGpus() []*GPU {
	if x != nil {
		return x.Gpus
	}
	return nil
}

func (x *WorkerStatusResponse) GetActiveTasks() []*TaskSummary {
	if x != nil {
		return x.ActiveTasks
	}
	return nil
}

func (x *WorkerStatusResponse) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Request for listing all workers
type ListWorkersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWorkersRequest) Reset() {
	*x = ListWorkersRequest{}
	mi := &file_proto_scheduler_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWorkersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkersRequest) ProtoMessage() {}

func (x *ListWorkersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkersRequest.ProtoReflect.Descriptor instead.
func (*ListWorkersRequest) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{11}
}

// Response for listing all workers
type ListWorkersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Workers       []*WorkerInfo          `protobuf:"bytes,1,rep,name=workers,proto3" json:"workers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWorkersResponse) Reset() {
	*x = ListWorkersResponse{}
	mi := &file_proto_scheduler_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWorkersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkersResponse) ProtoMessage() {}

func (x *ListWorkersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkersResponse.ProtoReflect.Descriptor instead.
func (*ListWorkersResponse) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{12}
}

func (x *ListWorkersResponse) GetWorkers() []*WorkerInfo {
	if x != nil {
		return x.Workers
	}
	return nil
}

// Worker information for listing
type WorkerInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkerId      string                 `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	Status        WorkerStatus           `protobuf:"varint,2,opt,name=status,proto3,enum=scheduler.WorkerStatus" json:"status,omitempty"`
	Address       string                 `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	GpuCount      uint32                 `protobuf:"varint,4,opt,name=gpu_count,json=gpuCount,proto3" json:"gpu_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkerInfo) Reset() {
	*x = WorkerInfo{}
	mi := &file_proto_scheduler_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerInfo) ProtoMessage() {}

func (x *WorkerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerInfo.ProtoReflect.Descriptor instead.
func (*WorkerInfo) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{13}
}

func (x *WorkerInfo) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *WorkerInfo) GetStatus() WorkerStatus {
	if x != nil {
		return x.Status
	}
	return WorkerStatus_IDLE
}

func (x *WorkerInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *WorkerInfo) GetGpuCount() uint32 {
	if x != nil {
		return x.GpuCount
	}
	return 0
}

// Summary of a task
type TaskSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status        TaskStatus             `protobuf:"varint,3,opt,name=status,proto3,enum=scheduler.TaskStatus" json:"status,omitempty"`
	Progress      float32                `protobuf:"fixed32,4,opt,name=progress,proto3" json:"progress,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskSummary) Reset() {
	*x = TaskSummary{}
	mi := &file_proto_scheduler_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskSummary) ProtoMessage() {}

func (x *TaskSummary) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskSummary.ProtoReflect.Descriptor instead.
func (*TaskSummary) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{14}
}

func (x *TaskSummary) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TaskSummary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TaskSummary) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_PENDING
}

func (x *TaskSummary) GetProgress() float32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

var File_proto_scheduler_proto protoreflect.FileDescriptor

const file_proto_scheduler_proto_rawDesc = "" +
	"\n" +
	"\x15proto/scheduler.proto\x12\tscheduler\"\x87\x01\n" +
	"\x06Worker\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\"\n" +
	"\x04gpus\x18\x02 \x03(\v2\x0e.scheduler.GPUR\x04gpus\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\x12/\n" +
	"\x06status\x18\x04 \x01(\x0e2\x17.scheduler.WorkerStatusR\x06status\"f\n" +
	"\x03GPU\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05model\x18\x02 \x01(\tR\x05model\x12\x1b\n" +
	"\tmemory_mb\x18\x03 \x01(\x04R\bmemoryMb\x12\x1c\n" +
	"\tavailable\x18\x04 \x01(\bR\tavailable\"\xca\x01\n" +
	"\x04Task\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12#\n" +
	"\rrequired_gpus\x18\x03 \x01(\rR\frequiredGpus\x12$\n" +
	"\x0emin_gpu_memory\x18\x04 \x01(\x04R\fminGpuMemory\x12$\n" +
	"\rconfiguration\x18\x05 \x01(\fR\rconfiguration\x12-\n" +
	"\x06status\x18\x06 \x01(\x0e2\x15.scheduler.TaskStatusR\x06status\"r\n" +
	"\x15RegisterWorkerRequest\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\x12\"\n" +
	"\x04gpus\x18\x02 \x03(\v2\x0e.scheduler.GPUR\x04gpus\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\"m\n" +
	"\x16RegisterWorkerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1f\n" +
	"\vassigned_id\x18\x03 \x01(\tR\n" +
	"assignedId\"{\n" +
	"\vTaskRequest\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\x12*\n" +
	"\x11available_gpu_ids\x18\x02 \x03(\tR\x0favailableGpuIds\x12#\n" +
	"\x04task\x18\x03 \x01(\v2\x0f.scheduler.TaskR\x04task\"\xda\x01\n" +
	"\x10TaskStatusUpdate\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x1b\n" +
	"\tworker_id\x18\x02 \x01(\tR\bworkerId\x12-\n" +
	"\x06status\x18\x03 \x01(\x0e2\x15.scheduler.TaskStatusR\x06status\x12\x1a\n" +
	"\bprogress\x18\x04 \x01(\x02R\bprogress\x12\x18\n" +
	"\amessage\x18\x05 \x01(\tR\amessage\x12+\n" +
	"\ametrics\x18\x06 \x03(\v2\x11.scheduler.MetricR\ametrics\"P\n" +
	"\x06Metric\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x02R\x05value\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x04R\ttimestamp\"R\n" +
	"\x12TaskStatusResponse\x12\"\n" +
	"\facknowledged\x18\x01 \x01(\bR\facknowledged\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"2\n" +
	"\x13WorkerStatusRequest\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\"\xe1\x01\n" +
	"\x14WorkerStatusResponse\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\x12/\n" +
	"\x06status\x18\x02 \x01(\x0e2\x17.scheduler.WorkerStatusR\x06status\x12\"\n" +
	"\x04gpus\x18\x03 \x03(\v2\x0e.scheduler.GPUR\x04gpus\x129\n" +
	"\factive_tasks\x18\x04 \x03(\v2\x16.scheduler.TaskSummaryR\vactiveTasks\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\x04R\ttimestamp\"\x14\n" +
	"\x12ListWorkersRequest\"F\n" +
	"\x13ListWorkersResponse\x12/\n" +
	"\aworkers\x18\x01 \x03(\v2\x15.scheduler.WorkerInfoR\aworkers\"\x91\x01\n" +
	"\n" +
	"WorkerInfo\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\x12/\n" +
	"\x06status\x18\x02 \x01(\x0e2\x17.scheduler.WorkerStatusR\x06status\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\x12\x1b\n" +
	"\tgpu_count\x18\x04 \x01(\rR\bgpuCount\"|\n" +
	"\vTaskSummary\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12-\n" +
	"\x06status\x18\x03 \x01(\x0e2\x15.scheduler.TaskStatusR\x06status\x12\x1a\n" +
	"\bprogress\x18\x04 \x01(\x02R\bprogress*:\n" +
	"\fWorkerStatus\x12\b\n" +
	"\x04IDLE\x10\x00\x12\b\n" +
	"\x04BUSY\x10\x01\x12\v\n" +
	"\aOFFLINE\x10\x02\x12\t\n" +
	"\x05ERROR\x10\x03*O\n" +
	"\n" +
	"TaskStatus\x12\v\n" +
	"\aPENDING\x10\x00\x12\v\n" +
	"\aRUNNING\x10\x01\x12\r\n" +
	"\tCOMPLETED\x10\x02\x12\n" +
	"\n" +
	"\x06FAILED\x10\x03\x12\f\n" +
	"\bCANCELED\x10\x042\x94\x03\n" +
	"\x11TrainingScheduler\x12U\n" +
	"\x0eRegisterWorker\x12 .scheduler.RegisterWorkerRequest\x1a!.scheduler.RegisterWorkerResponse\x126\n" +
	"\vRequestTask\x12\x16.scheduler.TaskRequest\x1a\x0f.scheduler.Task\x12N\n" +
	"\x10ReportTaskStatus\x12\x1b.scheduler.TaskStatusUpdate\x1a\x1d.scheduler.TaskStatusResponse\x12R\n" +
	"\rMonitorWorker\x12\x1e.scheduler.WorkerStatusRequest\x1a\x1f.scheduler.WorkerStatusResponse0\x01\x12L\n" +
	"\vListWorkers\x12\x1d.scheduler.ListWorkersRequest\x1a\x1e.scheduler.ListWorkersResponseB%Z#github.com/training-scheduler/protob\x06proto3"

var (
	file_proto_scheduler_proto_rawDescOnce sync.Once
	file_proto_scheduler_proto_rawDescData []byte
)

func file_proto_scheduler_proto_rawDescGZIP() []byte {
	file_proto_scheduler_proto_rawDescOnce.Do(func() {
		file_proto_scheduler_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_scheduler_proto_rawDesc), len(file_proto_scheduler_proto_rawDesc)))
	})
	return file_proto_scheduler_proto_rawDescData
}

var file_proto_scheduler_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_scheduler_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_proto_scheduler_proto_goTypes = []any{
	(WorkerStatus)(0),              // 0: scheduler.WorkerStatus
	(TaskStatus)(0),                // 1: scheduler.TaskStatus
	(*Worker)(nil),                 // 2: scheduler.Worker
	(*GPU)(nil),                    // 3: scheduler.GPU
	(*Task)(nil),                   // 4: scheduler.Task
	(*RegisterWorkerRequest)(nil),  // 5: scheduler.RegisterWorkerRequest
	(*RegisterWorkerResponse)(nil), // 6: scheduler.RegisterWorkerResponse
	(*TaskRequest)(nil),            // 7: scheduler.TaskRequest
	(*TaskStatusUpdate)(nil),       // 8: scheduler.TaskStatusUpdate
	(*Metric)(nil),                 // 9: scheduler.Metric
	(*TaskStatusResponse)(nil),     // 10: scheduler.TaskStatusResponse
	(*WorkerStatusRequest)(nil),    // 11: scheduler.WorkerStatusRequest
	(*WorkerStatusResponse)(nil),   // 12: scheduler.WorkerStatusResponse
	(*ListWorkersRequest)(nil),     // 13: scheduler.ListWorkersRequest
	(*ListWorkersResponse)(nil),    // 14: scheduler.ListWorkersResponse
	(*WorkerInfo)(nil),             // 15: scheduler.WorkerInfo
	(*TaskSummary)(nil),            // 16: scheduler.TaskSummary
}
var file_proto_scheduler_proto_depIdxs = []int32{
	3,  // 0: scheduler.Worker.gpus:type_name -> scheduler.GPU
	0,  // 1: scheduler.Worker.status:type_name -> scheduler.WorkerStatus
	1,  // 2: scheduler.Task.status:type_name -> scheduler.TaskStatus
	3,  // 3: scheduler.RegisterWorkerRequest.gpus:type_name -> scheduler.GPU
	4,  // 4: scheduler.TaskRequest.task:type_name -> scheduler.Task
	1,  // 5: scheduler.TaskStatusUpdate.status:type_name -> scheduler.TaskStatus
	9,  // 6: scheduler.TaskStatusUpdate.metrics:type_name -> scheduler.Metric
	0,  // 7: scheduler.WorkerStatusResponse.status:type_name -> scheduler.WorkerStatus
	3,  // 8: scheduler.WorkerStatusResponse.gpus:type_name -> scheduler.GPU
	16, // 9: scheduler.WorkerStatusResponse.active_tasks:type_name -> scheduler.TaskSummary
	15, // 10: scheduler.ListWorkersResponse.workers:type_name -> scheduler.WorkerInfo
	0,  // 11: scheduler.WorkerInfo.status:type_name -> scheduler.WorkerStatus
	1,  // 12: scheduler.TaskSummary.status:type_name -> scheduler.TaskStatus
	5,  // 13: scheduler.TrainingScheduler.RegisterWorker:input_type -> scheduler.RegisterWorkerRequest
	7,  // 14: scheduler.TrainingScheduler.RequestTask:input_type -> scheduler.TaskRequest
	8,  // 15: scheduler.TrainingScheduler.ReportTaskStatus:input_type -> scheduler.TaskStatusUpdate
	11, // 16: scheduler.TrainingScheduler.MonitorWorker:input_type -> scheduler.WorkerStatusRequest
	13, // 17: scheduler.TrainingScheduler.ListWorkers:input_type -> scheduler.ListWorkersRequest
	6,  // 18: scheduler.TrainingScheduler.RegisterWorker:output_type -> scheduler.RegisterWorkerResponse
	4,  // 19: scheduler.TrainingScheduler.RequestTask:output_type -> scheduler.Task
	10, // 20: scheduler.TrainingScheduler.ReportTaskStatus:output_type -> scheduler.TaskStatusResponse
	12, // 21: scheduler.TrainingScheduler.MonitorWorker:output_type -> scheduler.WorkerStatusResponse
	14, // 22: scheduler.TrainingScheduler.ListWorkers:output_type -> scheduler.ListWorkersResponse
	18, // [18:23] is the sub-list for method output_type
	13, // [13:18] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_proto_scheduler_proto_init() }
func file_proto_scheduler_proto_init() {
	if File_proto_scheduler_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_scheduler_proto_rawDesc), len(file_proto_scheduler_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_scheduler_proto_goTypes,
		DependencyIndexes: file_proto_scheduler_proto_depIdxs,
		EnumInfos:         file_proto_scheduler_proto_enumTypes,
		MessageInfos:      file_proto_scheduler_proto_msgTypes,
	}.Build()
	File_proto_scheduler_proto = out.File
	file_proto_scheduler_proto_goTypes = nil
	file_proto_scheduler_proto_depIdxs = nil
}
